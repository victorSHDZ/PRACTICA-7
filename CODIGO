#VICTOR ALEJANDRO SALAZAR HERNANDEZ
#PRACTICA 7

import cv2
import numpy as np

img = cv2.VideoCapture(1)

while True:
    ret, CapturaV = img.read()
    if ret == True:
        ''' Filtros Lineales '''
        # Kernel para Filtros Lineales
        kernel1 = np.ones((5, 5), np.float32) / 25
        # Filter 2D
        filt2D = cv2.filter2D(CapturaV, -1, kernel1)
        # Blur Difuminacion de Bordes
        blur = cv2.blur(CapturaV, (3, 3))
        # Gaussian Blur
        gblur = cv2.GaussianBlur(CapturaV, (3, 3), 0)
        # Median Blur
        mblur = cv2.medianBlur(CapturaV, 9)
        # Difuminacion de Ruido
        fmdc = cv2.fastNlMeansDenoisingColored(CapturaV, None, 10, 10, 7, 21)

        # -------------------------------------------------------
        ''' Filtros Morfologicos '''
        kernel = np.ones((7, 7), np.uint8)
        # Erosion
        erosion = cv2.erode(CapturaV, kernel, iterations=1)
        # Dilatacion
        dilatacion = cv2.dilate(CapturaV, kernel, iterations=1)
        # Apertura
        apertura = cv2.morphologyEx(CapturaV, cv2.MORPH_OPEN, kernel)
        # Cierre
        cierre = cv2.morphologyEx(CapturaV, cv2.MORPH_CLOSE, kernel)
        # Gradiente Morfologico
        gradiente = cv2.morphologyEx(CapturaV, cv2.MORPH_GRADIENT, kernel)

        # Para video Streeming
        ''' Mostrar Filtros Lineales '''
        cv2.imshow('Video Original', CapturaV)
        cv2.imshow('Filtro Lineal Filtro2D', filt2D)
        cv2.imshow('Filtro Lineal Blur', blur)
        cv2.imshow('Filtro Lineal Gaussiono Blur', gblur)
        cv2.imshow('Filtro Lineal Media Blur', mblur)
        cv2.imshow('Filtro Lineal Difuminacion de Ruido', fmdc)

        ''' Mostrar Filtros Morfologicos '''
        cv2.imshow('Filtro Morfologico Erosion', erosion)
        cv2.imshow('Filtro Morfologico Dilatacion', dilatacion)
        cv2.imshow('Filtro Morfologico Apertura', apertura)
        cv2.imshow('Filtro Morfologico Cierre', cierre)
        cv2.imshow('Filtro Morfologico Gradiente', gradiente)
        if cv2.waitKey(1) & 0xFF == ord('n'):
            break

img.release()
cv2.destroyAllWindows()

